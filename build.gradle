plugins {
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'jacoco'
}


bootJar {
	archiveFileName = 'cytomine.jar'
}


group = 'be.cytomine'
version = '0.0.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

springBoot {
	mainClass = "be.cytomine.CytomineCoreApplication"
}


dependencies {
	// Thanks to Spring dependency-management plugin, all following dependencies automatically get the right version
	// See https://docs.spring.io/spring-boot/docs/2.7.18/reference/html/dependency-versions.html
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	implementation 'org.hibernate:hibernate-core'
	implementation 'org.hibernate:hibernate-spatial'
	implementation 'org.hibernate.validator:hibernate-validator'
	implementation 'org.postgresql:postgresql'
	implementation 'com.zaxxer:HikariCP'
	implementation 'org.liquibase:liquibase-core'

	implementation 'org.springframework.security:spring-security-acl'

	implementation 'commons-codec:commons-codec'

	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hppc'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.assertj:assertj-core:3.4.1' //Should upgrade to 3.22

	// -----------------------------------------------------------------------------------------------------------------
	// Dependencies not managed by Spring dependency-management

	implementation 'org.springframework.cloud:spring-cloud-gateway-mvc:3.1.8'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			//'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for gson
	implementation 'com.vladmihalcea:hibernate-types-55:2.14.0'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation 'com.vividsolutions:jts:1.13'
	implementation "org.apache.pdfbox:pdfbox:2.0.25"
	implementation "org.apache.commons:commons-csv:1.5"
	implementation 'com.github.dhorions:boxable:1.6'
	implementation "net.bull.javamelody:javamelody-spring-boot-starter:1.91.0"
	// https://mvnrepository.com/artifact/org.apache.poi/poi
	implementation 'org.apache.poi:poi:5.2.3'
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	testImplementation 'com.github.tomakehurst:wiremock:1.58'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}


test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacoco {
	toolVersion = "0.8.7"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 1
			}
		}
	}
}

////create a single Jar with all dependencies
//task fatJar(type: Jar) {
//	manifest {
//		attributes 'Implementation-Title': 'Gradle Jar File Example',
//				'Implementation-Version': version,
//				'Main-Class': 'com.mkyong.DateUtils'
//	}
//	baseName = project.name + '-all'
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//	with jar
//}