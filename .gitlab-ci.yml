stages:
  - lint
  - test

lint-dockerfile:
  stage: lint
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/hadolint/hadolint:latest-alpine
  script:
    - hadolint docker/Dockerfile
  rules:
    - changes:
        - docker/Dockerfile
      when: always

    # If the Dockerfile has not been changed, this job can be skipped
    - when: never
      allow_failure: true

test:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/gradle:${GRADLE_VERSION}
  services:
    - alias: postgis
      name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/cytomineuliege/postgis:${CYTOMINE_POSTGIS_VERSION}
    - alias: mongo
      name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/cytomineuliege/mongo:${CYTOMINE_MONGO_VERSION}
  variables:
    GRADLE_USER_HOME: /cache/.gradle
    MONGO_INITDB_ROOT_USERNAME: mongoadmin
    MONGO_INITDB_ROOT_PASSWORD: secret
    MONGO_INITDB_DATABASE: cytomine
    POSTGRES_USER: docker
    POSTGRES_PASSWORD: docker
    POSTGRES_DB: docker
  script:
    - export GRADLE_USER_HOME=$GRADLE_USER_HOME
    - sed -i -- "s/localhost:5432/postgis:5432/g" src/test/resources/application.yml
    - "sed -i -- 's/host: localhost/host: mongo/g' src/test/resources/application.yml"
    - sed -i -- "s/name=\"be.cytomine\" level=\"debug\"/name=\"be.cytomine\" level=\"info\"/g" src/test/resources/logback-test.xml
    - gradle :test --no-daemon
  artifacts:
    reports:
      junit: build/test-results/test/**/TEST-*.xml